import asyncio
import logging
import os
import random
import string
import subprocess

from telegram import Update
from telegram.ext import (
    ApplicationBuilder,
    CommandHandler,
    MessageHandler,
    ContextTypes,
    filters,
)

import nest_asyncio
nest_asyncio.apply()

# –õ–æ–≥–≥–∏–Ω–≥
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# –ü–æ–ª—É—á–∏ —Ç–æ–∫–µ–Ω –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –¥–ª—è Render)
TOKEN = os.environ.get("BOT_TOKEN")  # –£—Å—Ç–∞–Ω–æ–≤–∏ –≤ Render > Environment > BOT_TOKEN

# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–∞—Ä–æ–ª—è
def generate_password(length=8):
    chars = string.ascii_letters + string.digits
    return ''.join(random.choice(chars) for _ in range(length))

# –ö–æ–º–∞–Ω–¥–∞ /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ü—Ä–∏–≤–µ—Ç! –ü—Ä–∏—à–ª–∏ –º–Ω–µ —Ñ–∞–π–ª, –∏ —è –∑–∞–∞—Ä—Ö–∏–≤–∏—Ä—É—é –µ–≥–æ —Å –ø–∞—Ä–æ–ª–µ–º.")

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–∞–π–ª–∞
async def handle_file(update: Update, context: ContextTypes.DEFAULT_TYPE):
    file = update.message.document or update.message.video or update.message.audio
    if not file:
        await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–∏—à–ª–∏ —Ñ–∞–π–ª.")
        return

    file_id = file.file_id
    file_name = file.file_name
    password = generate_password()

    new_name = f"{file_id}_{file_name}"
    zip_name = f"{file_id}.zip"

    file_obj = await context.bot.get_file(file_id)
    await file_obj.download_to_drive(new_name)

    # –ò—Å–ø–æ–ª—å–∑—É–µ–º –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π zip –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∞—Ä—Ö–∏–≤–∞ —Å –ø–∞—Ä–æ–ª–µ–º (–Ω–µ AES)
    subprocess.run(["zip", "-P", password, zip_name, new_name], check=True)

    with open(zip_name, "rb") as f:
        await update.message.reply_document(f, filename=zip_name)

    await update.message.reply_text(f"üîê –ü–∞—Ä–æ–ª—å: `{password}`", parse_mode="Markdown")

    # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
    os.remove(new_name)
    os.remove(zip_name)

# –û—Å–Ω–æ–≤–Ω–æ–π –∑–∞–ø—É—Å–∫
async def main():
    app = ApplicationBuilder().token(TOKEN).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.Document.ALL | filters.Video.ALL | filters.Audio.ALL, handle_file))

    logger.info("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    await app.start()
    await app.updater.start_polling()
    await app.updater.idle()

# –ó–∞–ø—É—Å–∫–∞–µ–º —Å —É—á—ë—Ç–æ–º nest_asyncio
asyncio.get_event_loop().create_task(main())
asyncio.get_event_loop().run_forever()
