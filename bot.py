import os
import asyncio
import logging
import secrets
import string
import subprocess
from telegram import Update
from telegram.ext import (
    ApplicationBuilder,
    ContextTypes,
    MessageHandler,
    CommandHandler,
    filters,
)
import nest_asyncio

# –õ–æ–≥–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO)

# –¢–æ–∫–µ–Ω –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è
TOKEN = os.getenv("BOT_TOKEN")

# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ –ø–∞—Ä–æ–ª—è
def generate_password(length=12):
    chars = string.ascii_letters + string.digits
    return ''.join(secrets.choice(chars) for _ in range(length))

# –ö–æ–º–∞–Ω–¥–∞ /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ü—Ä–∏–≤–µ—Ç! –ü—Ä–∏—à–ª–∏ –º–Ω–µ —Ñ–∞–π–ª, –∏ —è –æ—Ç–ø—Ä–∞–≤–ª—é –µ–≥–æ –≤ ZIP-–∞—Ä—Ö–∏–≤–µ —Å –ø–∞—Ä–æ–ª–µ–º.")

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–∞–π–ª–æ–≤
async def handle_file(update: Update, context: ContextTypes.DEFAULT_TYPE):
    file = update.message.document or update.message.video or update.message.audio
    if not file:
        await update.message.reply_text("–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Ç–∏–ø —Ñ–∞–π–ª–∞.")
        return

    # –°–∫–∞—á–∏–≤–∞–µ–º —Ñ–∞–π–ª
    file_path = f"{file.file_unique_id}_{file.file_name}"
    new_file = await file.get_file()
    await new_file.download_to_drive(file_path)

    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø–∞—Ä–æ–ª—å –∏ –∏–º—è –∞—Ä—Ö–∏–≤–∞
    password = generate_password()
    zip_name = file_path + ".zip"

    # –ò—Å–ø–æ–ª—å–∑—É–µ–º –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π zip (Render –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç)
    zip_command = ["zip", "-j", "-P", password, zip_name, file_path]
    subprocess.run(zip_command)

    # –û—Ç–ø—Ä–∞–≤–∫–∞ –∞—Ä—Ö–∏–≤–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    with open(zip_name, "rb") as archive:
        await update.message.reply_document(archive, filename=zip_name)

    # –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–∞—Ä–æ–ª—è
    await update.message.reply_text(f"üîê –ü–∞—Ä–æ–ª—å –æ—Ç –∞—Ä—Ö–∏–≤–∞: `{password}`", parse_mode="Markdown")

    # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
    os.remove(file_path)
    os.remove(zip_name)

# –û—Å–Ω–æ–≤–Ω–æ–π –∑–∞–ø—É—Å–∫
async def main():
    app = ApplicationBuilder().token(TOKEN).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.ATTACHMENT, handle_file))

    await app.run_polling()

if __name__ == "__main__":
    nest_asyncio.apply()
    asyncio.run(main())
